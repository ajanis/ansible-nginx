---

- name: "[NGINX] :: create public_html directory"
  file:
    path: "{{ data_mount_root }}/{{ www_directory }}"
    state: directory
    mode: 0755
    owner: "{{ media_user_uid }}"
    group: "{{ media_user_gid }}"
  notify:
    - restart nginx

- name: "[NGINX] :: Install SSL Key"
  copy:
    content: "{{ item.sslkeycontent }}"
    dest: "{{ item.sslkeyfile }}"
    owner: root
    group: root
    mode: 0640
  with_items: "{{ nginx_vhosts_ssl }}"
  notify:
    - restart nginx

- name: "[NGINX] :: Install SSL Certificate Chain"
  copy:
    content: "{{ item.sslcertcontent }}"
    dest: "{{ item.sslcertfile }}"
    owner: root
    group: root
    mode: 0640
  with_items: "{{ nginx_vhosts_ssl }}"
  notify:
    - restart nginx

- name: "[NGINX] :: Remove default vhost configs"
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ nginx_default_site }}"
  notify:
    - restart nginx

- name: "[NGINX] :: Build nginx.conf template"
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify:
    - restart nginx

- name: "[NGINX] :: Build proxy.conf template"
  template:
    src: proxy.conf.j2
    dest: /etc/nginx/proxy.conf
  notify:
    - restart nginx

- name: "[NGINX] :: Build ssl.conf template"
  template:
    src: ssl.conf.j2
    dest: /etc/nginx/ssl.conf
  notify:
    - restart nginx

- name: "[NGINX] :: Build NGINX vhost template"
  template:
    src: default.conf.j2
    dest: "{{ nginx_cfg_dir }}/{{ www_domain }}"
  notify:
    - restart nginx

- name: "[NGINX] :: Build NGINX SSL vhost template"
  template:
    src: default-ssl.conf.j2
    dest: "{{ nginx_cfg_dir }}/{{ www_domain }}-ssl"
  notify:
    - restart nginx

- name: "[NGINX] :: restart nginx"
  service:
    name: nginx
    state: restarted

- name: "[NGINX] :: Copy Fail2Ban Filters"
  copy:
    src: "fail2ban/filter.d/{{ item }}"
    dest: "/etc/fail2ban/filter.d/{{ item }}"
  with_items:
    - nginx-404.conf
    - nginx-badbots.conf
    - nginx-nohome.conf
    - nginx-noscript.conf
  notify: restart fail2ban

- name: "[NGINX] :: Copy Fail2Ban Jail Config"
  copy:
    src: "fail2ban/jail.d/custom.conf"
    dest: "/etc/fail2ban/jail.d/custom.conf"
  notify: restart fail2ban

- name: "[NGINX] :: Set Fail2Ban Ignore IPs"
  lineinfile:
    regexp: '^ignoreip.*$'
    insertafter: '^#.*ignoreip.*$'
    line: 'ignoreip = 10.0.0.0/8'
    path: "/etc/fail2ban/jail.conf"
  notify: restart fail2ban

- name: "[NGINX] :: Set Fail2Ban Use Raw IPs for bans"
  lineinfile:
    regexp: '^usedns.*$'
    line: 'usedns = raw'
    path: "/etc/fail2ban/jail.conf"
  notify: restart fail2ban

- name: "[NGINX] :: Set Fail2Ban Ban Time"
  lineinfile:
    regexp: '^bantime.*$'
    line: 'bantime  = 86400'
    path: "/etc/fail2ban/jail.conf"
  notify: restart fail2ban

- name: "[NGINX] :: Set Fail2Ban Find Time"
  lineinfile:
    regexp: '^findtime.*$'
    line: 'findtime  = 600'
    path: "/etc/fail2ban/jail.conf"
  notify: restart fail2ban

- name: "[NGINX] :: Set Fail2Ban Max Retries"
  lineinfile:
    regexp: '^maxretry.*$'
    line: 'maxretry  = 3'
    path: "/etc/fail2ban/jail.conf"
  notify: restart fail2ban