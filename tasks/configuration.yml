---
- name: Configure nginx public_html directory
  block:
    - name: "Ensure public_html directory exist"
      file:
        path: "{{ nginx_default_docroot }}"
        state: directory
        mode: 0755
        owner: "{{ nginx_user|default(nginx_default_user) }}"
        group: "{{ nginx_group|default(nginx_default_group)|default(nginx_default_group) }}"
    - name: "Create symlinks for services like PXE"
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
        mode: 0755
        owner: "{{ nginx_user|default(nginx_default_user) }}"
        group: "{{ nginx_group|default(nginx_default_group)|default(nginx_default_group) }}"
      loop: "{{ nginx_symlinks }}"
      when: nginx_symlinks | length > 0
  tags:
    - nginx-data-directories

- name: Remove default nginx vhosts, update nginx.conf, proxy, caching, upstream and loaded modules
  block:
    - name: "Remove default vhost configs"
      file:
        path: "{{ item }}"
        state: absent
      loop: "{{ nginx_default_site }}"

    - name: "Build nginx.conf template"
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
      notify: "restart_nginx"

    - name: "Enable Modules"
      template:
        src: loadmodule.conf.j2
        dest: "/etc/nginx/modules-enabled/{{ item }}.conf"
      loop: "{{ nginx_modules_enabled }}"
      loop_control:
        label: "{{ item }}"
      notify: "restart_nginx"

    - name: "Build NGINX vhost proxy template"
      template:
        src: proxy.conf.j2
        dest: /etc/nginx/proxy.conf
      notify: "restart_nginx"

    - name: "Build NGINX vhost proxy-cache template"
      template:
        src: proxy-cache.conf.j2
        dest: /etc/nginx/proxy-cache.conf
      notify: "restart_nginx"

    - name: "Build NGINX Backend template"
      template:
        src: upstream.conf.j2
        dest: "{{ nginx_cfg_dir }}/upstream.conf"
      notify: "restart_nginx"

    - name: "Build NGINX Cache template"
      template:
        src: cache.conf.j2
        dest: "{{ nginx_cfg_dir }}/cache.conf"
      notify: "restart_nginx"

- import_tasks: enable_rtmp.yml
  when: nginx_enable_rtmp|default(False)
  tags:
    - nginx-configure-rtmp

- import_tasks: http_vhosts.yml
  when:
    -  ( nginx_vhosts | length > 0 ) | default('[]')
  tags:
    - nginx-vhost-config

- import_tasks: ssl_slurp.yml
  when:
    - slurp_ssl_keys_from_remote|default(False)
    - ssl_slurp_remote_host|length > 0
    - ssl_cert_slurp_path|length > 0
    - ssl_key_slurp_path|length > 0
  tags:
    - nginx-ssl-slurp

- import_tasks: https_vhosts.yml
  when:
    - ( nginx_vhosts_ssl | length > 0 ) | default('[]')
  tags:
    - nginx-ssl-config


- meta: flush_handlers

- name: Restart the nginx service if any configuration files have changed
  systemd:
    name: nginx
    state: |-
      {%- if nginx_require_restart|default(False) -%}
      restarted
      {%- else -%}
      started
      {%- endif -%}
    enabled: yes
    daemon_reload: yes
  register: nginx_restarted
  ignore_errors: yes

- name: Verify the nginx service is listening
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: "{{ nginx_http_listen }}"
    delay: 5
    timeout: 30
  ignore_errors: yes
  register: nginx_start_attempt

- name: Get nginx journald logs if service does not appear to be up
  shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value nginx.service`
  register: nginx_journal
  when:
    - nginx_start_attempt.failed | default(false)

- debug:
    msg: "{{ nginx_journal.stdout_lines }}"
  when:
    - nginx_start_attempt.failed | default(false)
  failed_when: nginx_start_attempt.failed
