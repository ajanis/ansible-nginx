---

- name: "Ensure public_html directory exist"
  file:
    path: "{{ nginx_default_docroot }}"
    state: directory
    mode: 0755
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"


- name: "Ensure SSL Cert directory exists"
  file:
    path: "{{ item.ssl_certpath | dirname }}"
    state: directory
    mode: 0755
    owner: "root"
    group: "root"
  loop: "{{ nginx_vhosts_ssl }}"

- name: "Ensure SSL Key directory exists"
  file:
    path: "{{ item.ssl_keypath | dirname }}"
    state: directory
    mode: 0640
    owner: "root"
    group: "root"
  loop: "{{ nginx_vhosts_ssl }}"

- name: "Install SSL Key"
  copy:
    content: "{{ item.ssl_privkey }}"
    dest: "{{ item.ssl_keypath }}"
    owner: root
    group: root
    mode: 0640
  with_items: "{{ nginx_vhosts_ssl }}"
  notify: "restart_nginx"

- name: "Install SSL Certificate Chain"
  copy:
    content: "{{ item.ssl_certchain }}"
    dest: "{{ item.ssl_certpath }}"
    owner: root
    group: root
    mode: 0640
  with_items: "{{ nginx_vhosts_ssl }}"
  notify: "restart_nginx"

- name: "Remove default vhost configs"
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ nginx_default_site }}"


- name: "Build nginx.conf template"
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: "restart_nginx"

- name: "Build NGINX vhost proxy template"
  template:
    src: proxy.conf.j2
    dest: /etc/nginx/proxy.conf
  notify: "restart_nginx"

- name: "Build NGINX vhost proxy-cache template"
  template:
    src: proxy-cache.conf.j2
    dest: /etc/nginx/proxy-cache.conf
  notify: "restart_nginx"

- name: "Build ssl.conf template"
  template:
    src: ssl.conf.j2
    dest: /etc/nginx/ssl.conf
  notify: "restart_nginx"

- name: "Build NGINX Backend template"
  template:
    src: upstream.conf.j2
    dest: "{{ nginx_cfg_dir }}/upstream.conf"
  notify: "restart_nginx"

- name: "Build NGINX Cache template"
  template:
    src: cache.conf.j2
    dest: "{{ nginx_cfg_dir }}/cache.conf"
  notify: "restart_nginx"

- name: "Build NGINX vhost template"
  template:
    src: default.conf.j2
    dest: "{{ nginx_cfg_dir }}/{{ www_domain }}"
  notify: "restart_nginx"

- name: "Build NGINX SSL vhost template"
  template:
    src: default-ssl.conf.j2
    dest: "{{ nginx_cfg_dir }}/{{ www_domain }}-ssl"
  notify: "restart_nginx"

- meta: flush_handlers

- name: Restart the nginx service if any configuration files have changed
  systemd:
    name: nginx
    state: "{% if nginx_require_restart %}started{% else %}restarted{% endif %}""
    enabled: yes
    daemon_reload: yes
  register: nginx_restarted
  ignore_errors: yes

- name: Verify the nginx service is listening
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: "{{ nginx_http_listen }}"
    delay: 5
  when: nginx_restarted is changed
  ignore_errors: yes
  register: nginx_start_attempt

- name: Get nginx journald logs if service does not appear to be up
  shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value nginx.service`
  register: nginx_journal
  when:
    - nginx_start_attempt.failed | default(false)
- fail:
    msg: "{{ nginx_journal.stdout_lines }}"
  when:
    - nginx_start_attempt.failed | default(false)
